version: "3.8"

services:
  web:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - .:/usr/src/bin/

    # In production
#    volumes:
#      - static_volume:/home/app/web/staticfiles
#      - media_volume:/home/app/web/mediafiles
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      - db
      - redis
#

  db:
    image: postgres:15
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=${DATABASE_USERNAME}
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
      - POSTGRES_DB=${DATABASE_NAME}
    env_file:
      - .env

  nginx:
    build:
      context: .
      dockerfile: nginx/Dockerfile
    # Only in production
    volumes:
      - static_volume:/home/app/web/staticfiles
      - media_volume:/home/app/web/mediafiles

    ports:
      - "1337:80"
    depends_on:
      - web

  redis:
    image: redis:7-alpine
    volumes:
      - redis_data:/data
    ports:
      - ':6379'

#  celery:
#    build:
#      context: .
##      dockerfile: Dockerfile
#    image: celery_worker
#    command: celery -A django_docker worker -l info
##    entrypoint: /usr/src/app/entrypoint.sh
#    volumes:
#      - .:/usr/src/app/
#    env_file:
#      - .env
#    depends_on:
#      - redis
#      - web
##
#  celery_beat:
#      build:
#        context: .
##        dockerfile: Dockerfile
#      image: celery_beat
#      command: celery -A django_docker beat -l info
##      entrypoint: /usr/src/app/entrypoint.sh
#      volumes:
#        - .:/usr/src/app/
#      env_file:
#        - .env
#      depends_on:
#        - redis
#        - web

volumes:
  postgres_data:
  # Only in production
  static_volume:
  media_volume:
  redis_data:
