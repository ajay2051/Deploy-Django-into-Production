name: Build Docker Container & Push

on:
  workflow_call:
  workflow_dispatch:
  push:
#    branches: [ "main" ]
    branches: [ "*" ]
  pull_request:
#    branches: [ "main" ]
    branches: [ "*" ]

jobs:
  test_django_job:
    uses: ajay2051/Deploy-Django-into-Production/.github/workflows/test-django.yml@main
  build:

    runs-on: ubuntu-latest
    needs: [test_django_job]
    env:
#      DJANGO_SECRET_KEY: nxjahdoNKX5SHSi154asx
      CLUSTER_NAME: django_docker
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Install doctl
      uses: digitalocean/action-doctl@v2
      with:
        token: ${{secrets.API_TOKEN_KEY}}
    - name: Login to Do Container Registry
      run: doctl registry login --expiry-seconds 1200
    - name: Build container image
      working-directory: django_docker
      run: docker build -f Dockerfile \
          -t registry.digitalocean.com/django_docker:latest \
          -t registry.digitalocean.com/django_docker:${GITHUB_SHA::7} \
          .
    - name: Push Image
      run: docker push registry.digitalocean.com/django_docker --all-tags
    - name: Push Image
      run: doctl kubernetes cluster kubeconfig save --expiry-seconds 1200 ${{env.CLUSTER_NAME}}
    - name: Update Deployment secrets
      run: |
        cat << EOF >> .env.prod
        AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}
          DJANGO_SUPERUSER_USERNAME=${{ secrets.DJANGO_SUPERUSER_USERNAME }}
          DJANGO_SUPERUSER_PASSWORD=${{ secrets.DJANGO_SUPERUSER_PASSWORD }}
          DJANGO_SUPERUSER_EMAIL=${{ secrets.DJANGO_SUPERUSER_EMAIL }}
          DJANGO_SECRET_KEY=${{ secrets.DJANGO_SECRET_KEY }}
          ENV_ALLOWED_HOST=${{ secrets.ENV_ALLOWED_HOST }}
          POSTGRES_DB=${{ secrets.POSTGRES_DB }}
          POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_USER=${{ secrets.POSTGRES_USER }}
          POSTGRES_HOST=${{ secrets.POSTGRES_HOST }}
          POSTGRES_PORT=${{ secrets.POSTGRES_PORT }}
        EOF
        kubectl delete secret django-web-env
        kubectl create secret generic web-prod-env --from-env-file=.env.prod
    - name: Update Deployment image
      run: kubectl set image web-deployment django-web-deployment=registry.digitalocean.com/django_docker:${GITHUB_SHA::7} # django-web-deployment is container name
    - name: Wait for roll out to finish
      run: kubectl rollout status django-web-deployment
    - name: Migrate Database Command
      run:  export SINGLE_POD_NAME=$(kubectl get pod -l app=web-deployment -o jsonpath="{.items[0].metadata.name}")
          kubectl exec -it $SINGLE_POD_NAME -- bash /app/migrate.sh